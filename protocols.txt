client to server:

{
  type: newUser,
  priority: priority,
  username: username,
  password: password,
}

{
  type: login,
  priority: priority,
  username: username,
  password: password
}

{
  type: changeUsername,
  priority: priority,
  userId: userId,
  token: token,
  newUsername: newUsername
}

{
  type: changePassword,
  priority: priority,
  userId: userId,
  password: password,
  token: token,
  newPassword: newPassword
}

{
  type: text,
  priority: priority,
  channelId: channelId,
  userId: userId,,
  content: msg,
  token: token
}

{
  type: friendRequest,
  priority: priority,
  from: userId,
  to: username,
  token: token
}

{
  type: uploadFile,
  priority: priority,
  channelId: channelId,
  userId: userId,
  token: token,
  content: base64string
}

{
  type: getFile,
  priority: priority,
  userId: userId,
  token: token,
  content: base64string
}

{
  type: userData,
  priority: priority,
  userId: userId,
  token: token
}


server to client:


{
  type: status,
  error: null/error_msg
}

{
  type: loginStatus,
  error: null/error_msg,
  token: token,
  friends: [userId],
  incoming_friend_requests: [userId],
  outgoing_friend_requests: [userId],
  channels: [channelId],
}

{
  type: file,
  channelId: channelId,
  content: base64string
}

{
  type: message,
  channelId: channelId,
  messageType: text/file,
  content: msg/fileName
}


Data:
user = {
  userId: userId,
  username: username,
  password: password,
  friends: [userId],
  incoming_friend_requests: [userId],
  outgoing_friend_requests: [userId],
  blocked: [userId],
  channels: [channelId],
  status: active/idle/invisible/dnd
}

privateChannel = {
  channelId: channelId,
  participants: [userId]
}

groupChannel = {
  channelId: channelId,
  participants: [userId],
  blacklist: [userId],
  admin: userId
}

