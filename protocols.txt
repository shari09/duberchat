client to server:

{
  type:        NEW_USER,
  priority:    int,

  username:    String,
  password:    String,
  description: String
}

{
  type:        LOGIN,
  priority:    int,

  username:    String,
  password:    String
}

{
  type:        CHANGE_PASSWORD,
  priority:    int,

  userId:      String,
  token:       Token,

  originalPassword: String,
  newPassword:      String
}

{
  type:          CHANGE_PROFILE,
  priority:      int,

  userId:        String,
  token:         Token,

  fieldToChange: ProfileField
  newValue:      String
}

{
  type:        CHANGE_CHANNEL,
  priority:    int,

  userId:      String,
  token:       Token,

  channelId:   String,
  changeField: ChannelField
  newValue:    String
}

{
  type:       SEND_MESSAGE,
  priority:   int,

  userId:     String,
  token:      Token,

  channelId:  String,
  content:    String,
  attachment: null / byte[]
}

{
  type:       REQUEST_MESSAGES,
  priority:   int,

  userId:     String,
  token:      Token,

  channelId:  String,
  before:     Date, //earliest timestamp in cache
  quantity:   int
}

{
  type:       FRIEND_REQUEST,
  priority:   int,

  userId:     String,
  token:      Token,

  recipientName:  String,
  requestMessage: String 
}

{
  type:       FRIEND_REQUEST_RESPONSE,
  priority:   int,

  userId:     String,
  token:      Token,

  recipientId:  String,
  accepted:     boolean
}

{
  type: GET_FILE,
  priority: priority,

  userId: String,
  token: Token,

  fileId: String
}


server to client:

{
  type:     CLIENT_REQUEST_STATUS,
  priority: priority,

  error:  null / String (errorMsg)
}

{
  type:     CLIENT_INFO,
  priority: priority,

  userId:   String,
  token:    Token,
  friends:  ArrayList<String> (userId),
  incoming_friend_requests: ArrayList<String> (userId),
  outgoing_friend_requests: ArrayList<String> (userId),
  channels: ArrayList<String> (channelId)
}

{
  type: MESSAGES,
  priority: priority,

  channelId: channelId,
  content: Message[]
}

{
  type:      FILE,
  priority:  priority,

  filename:  String,
  content:   byte[]
}

Data:
user = {
  userId:      String,
  username:    String,
  password:    String,
  description: String,
  status:   UserStatus (active/idle/invisible/dnd),

  friends:  ArrayList<String>, //user id
  incoming_friend_requests: ArrayList<String>, //user id
  outgoing_friend_requests: ConcurrentHashMap<String (userId), FriendRequestStatus>,
  blocked:  ArrayList<String>, //user id
  
  channels: ArrayList<String>, //channel id
}

privateChannel = {
  channelId: channelId,
  channelName: channelName,
  participants: [userId]
}

groupChannel = {
  channelId: channelId,
  channelName: channelName,
  participants: [userId],
  blacklist: [userId],
  admin: userId
}

message = {
  content:    String,
  sender:     String (userId),
  channelId:  String,
  timestamp:  Date,
  attachment: null / fileId,
}